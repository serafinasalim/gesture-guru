{
    "swagger": "2.0",
    "info": {
        "description": "Documentation for GestureGuru",
        "title": "Gesture Guru API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/gesture-guru",
    "paths": {
        "/lesson/save/{userId}/{lessonId}": {
            "put": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Save Lesson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "lessonId",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/lessons/{userId}": {
            "get": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Browse Lesson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Lesson"
                        }
                    }
                }
            }
        },
        "/user/email/{id}": {
            "put": {
                "description": "Sample Payload: \u003cbr\u003e `{`\u003cbr\u003e` \"email\": \"serafina@gmail.com\" `\u003cbr\u003e` }`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User Email",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Update Email",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdateEmail"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/login": {
            "post": {
                "description": "Sample Payload: \u003cbr\u003e `{`\u003cbr\u003e`\"username\": \"serafina\", `\u003cbr\u003e` \"password\": \"123456\" `\u003cbr\u003e` }`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "User Login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/register": {
            "post": {
                "description": "Sample Payload: \u003cbr\u003e `{`\u003cbr\u003e`\"username\": \"serafina\", `\u003cbr\u003e` \"email\": \"serafina@gmail.com\", `\u003cbr\u003e` \"password\": \"123456\", `\u003cbr\u003e` \"confirmPassword\": \"123456\" `\u003cbr\u003e`}`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "User Registration",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserRegister"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/request-otp/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Request OTP",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/user/verify/{id}": {
            "put": {
                "description": "Sample Payload: \u003cbr\u003e `{`\u003cbr\u003e`\"otp\": \"ABCDEF\" `\u003cbr\u003e`}`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string",
                        "default": "true",
                        "description": "new",
                        "name": "new",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "User Verification",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserVerify"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Detail User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Sample Payload: \u003cbr\u003e `{`\u003cbr\u003e` \"profile\": \"profile.jpg\", `\u003cbr\u003e` \"username\": \"serafinasalim\", `\u003cbr\u003e` \"bio\": \"bio aq\" `\u003cbr\u003e` }`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "models.Lesson": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "saved": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "video": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 50
                },
                "username": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "models.UserRegister": {
            "type": "object",
            "required": [
                "confirmPassword",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string",
                    "maxLength": 50
                },
                "email": {
                    "type": "string",
                    "maxLength": 50
                },
                "password": {
                    "type": "string",
                    "maxLength": 50
                },
                "username": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "models.UserUpdate": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "models.UserUpdateEmail": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "models.UserVerify": {
            "type": "object",
            "required": [
                "otp"
            ],
            "properties": {
                "otp": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                }
            }
        }
    }
}